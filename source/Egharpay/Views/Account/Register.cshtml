@model Egharpay.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
    Layout = null;
}



<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>eGharpay | Register</title>
    <link href="~/Content/bootstrap.min.css" rel="stylesheet">
    <link href="~/Fonts/font-awesome/css/font-awesome.css" rel="stylesheet">
    <link href="~/Content/animate.css" rel="stylesheet">
    <link href="~/Content/css/Site.css" rel="stylesheet">
</head>

<body class="top-navigation">
    <div id="page-top" class="navbar-wrapper landing-page">
        <nav class="navbar navbar-fixed-top" role="navigation">
            <div class="navbar-header">
                @*<button aria-controls="navbar" aria-expanded="false" data-target="#navbar" data-toggle="collapse" class="navbar-toggle collapsed" type="button">
                    <i class="fa fa-reorder"></i>
                </button>*@
                <div class="row">
                    <div class="col-lg-2">
                        <a href="~/Home" class="navbar-brand"><strong>mumbile</strong></a>
                    </div>
                </div>
            </div>
        </nav>
    </div>
    <div class="loginColumns animated fadeInDown" ng-app="Egharpay" ng-controller="RegisterController as model">
        <div class="row">
            <div class="col-md-6" id="login">
                <h2 class="font-bold">Welcome to mumbile</h2>
                <p>
                    Perfectly designed and precisely prepared admin theme with over 50 pages with extra new web app views.
                </p>
                <p>
                    Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s.
                </p>
                <p>
                    When an unknown printer took a galley of type and scrambled it to make a type specimen book.
                </p>

                <p>
                    <small>It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.</small>
                </p>

            </div>
            <div class="col-md-6">
                <div class="ibox-content">

                    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "m-t", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <h1>Register to mumbile</h1>
                        <p>Create account to see it in action.</p>
                        if (ViewContext.ViewData.ModelState.Any(x => x.Key == ""))
                        {
                            <div class="form-group alert alert-danger">
                                @Html.ValidationSummary(false, null, new { @class = "" })
                            </div>
                        }
                        <div class="form-group">
                            <div>
                                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", @placeholder = "Firstname" })
                                @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div>
                                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", @placeholder = "Lastname" })
                                @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div>
                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "Email" })
                                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div>
                                @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "Password" })
                                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div>
                                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @placeholder = "ConfirmPassword" })
                                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div>
                                @Html.TextBoxFor(m => m.Pincode, new { @class = "form-control", @placeholder = "Pincode" })
                                @Html.ValidationMessageFor(m => m.Pincode, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <p class="text-muted text-left">
                            <small>
                                @*<a ng-href="/Pincode/Index">Find pincode?&nbsp;&nbsp;&nbsp;</a>
                                    OR*@
                                <a ng-click="model.addPincode();" id="findZipCode">&nbsp;&nbsp;&nbsp; Get pincode from current location</a>
                            </small>
                        </p>
                        <div class="form-group">
                            <label> @*<input type="checkbox" class="i-checks" name="IsSeller">*@ I am a seller.</label>
                            @Html.CheckBoxFor(m => m.IsSeller);
                        </div>
                        <p class="text-muted text-right">
                            <small></small>
                        </p>
                        <button type="submit" class="btn btn-primary block full-width m-b">Register</button>

                        <p class="text-muted text-center">
                            <small>Already have an account?</small>
                        </p>
                        <a class="btn btn-sm btn-white btn-block" href="@Url.Action("Login", "Pages")">Login</a>
                    }
                </div>
            </div>
        </div>
    </div>
</body>
</html>
@Scripts.Render("~/Scripts/bower")
@Scripts.Render("~/Scripts/Application")
